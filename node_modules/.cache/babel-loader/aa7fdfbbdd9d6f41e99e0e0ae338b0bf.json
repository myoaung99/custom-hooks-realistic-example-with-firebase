{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nconst useFetchTask = function () {\n  _s();\n\n  let method = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"GET\";\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  const fetchTasks = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-5826f-default-rtdb.firebaseio.com/tasks.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n\n      console.log(loadedTasks);\n      setTasks(loadedTasks);\n      console.log(tasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return [isLoading, tasks, error, setTasks, fetchTasks];\n};\n\n_s(useFetchTask, \"n5SlQVdc2sZg3OeT00ajYzBfpL0=\");\n\nexport default useFetchTask;","map":{"version":3,"sources":["C:/Users/myomy/Documents/react/custom-hooks-more-realistic-example/src/hooks/use-fetch.js"],"names":["React","useState","useEffect","useFetchTask","method","isLoading","setIsLoading","error","setError","tasks","setTasks","fetchTasks","taskText","response","fetch","ok","Error","data","json","console","log","loadedTasks","taskKey","push","id","text","err","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,YAAY,GAAG,YAAoB;AAAA;;AAAA,MAAnBC,MAAmB,uEAAV,KAAU;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,UAAU,GAAG,MAAOC,QAAP,IAAoB;AACrCN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4DAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,YAAMI,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,OAAX,IAAsBL,IAAtB,EAA4B;AAC1BI,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,UAAAA,EAAE,EAAEF,OAAN;AAAeG,UAAAA,IAAI,EAAER,IAAI,CAACK,OAAD,CAAJ,CAAcG;AAAnC,SAAjB;AACD;;AAEDN,MAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AAEAX,MAAAA,QAAQ,CAACW,WAAD,CAAR;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,KAtBD,CAsBE,OAAOiB,GAAP,EAAY;AACZlB,MAAAA,QAAQ,CAACkB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDrB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA7BD;;AA+BA,SAAO,CAACD,SAAD,EAAYI,KAAZ,EAAmBF,KAAnB,EAA0BG,QAA1B,EAAoCC,UAApC,CAAP;AACD,CArCD;;GAAMR,Y;;AAuCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst useFetchTask = (method = \"GET\") => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const fetchTasks = async (taskText) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://react-5826f-default-rtdb.firebaseio.com/tasks.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n\r\n      const loadedTasks = [];\r\n\r\n      for (const taskKey in data) {\r\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n      }\r\n\r\n      console.log(loadedTasks);\r\n\r\n      setTasks(loadedTasks);\r\n      console.log(tasks);\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return [isLoading, tasks, error, setTasks, fetchTasks];\r\n};\r\n\r\nexport default useFetchTask;\r\n"]},"metadata":{},"sourceType":"module"}